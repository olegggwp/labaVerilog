$date
	Sat Dec  3 20:39:49 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$scope module cpu1 $end
$var wire 15 ! A1 [14:0] $end
$var wire 4 " C1 [3:0] $end
$var wire 16 # D1 [15:0] $end
$var wire 1 $ M_DUMP $end
$var wire 1 % M_dump $end
$var wire 1 & clk $end
$var reg 15 ' a1 [14:0] $end
$var reg 4 ( c1out [3:0] $end
$var reg 16 ) d1out [15:0] $end
$var reg 1 * m_dump $end
$var reg 32 + s [31:0] $end
$var reg 1 , write1 $end
$var integer 32 - K [31:0] $end
$var integer 32 . M [31:0] $end
$var integer 32 / N [31:0] $end
$var integer 32 0 cnt [31:0] $end
$var integer 32 1 i [31:0] $end
$var integer 32 2 k [31:0] $end
$var integer 32 3 pa [31:0] $end
$var integer 32 4 pb [31:0] $end
$var integer 32 5 pc [31:0] $end
$var integer 32 6 t1 [31:0] $end
$var integer 32 7 t2 [31:0] $end
$var integer 32 8 x [31:0] $end
$var integer 32 9 y [31:0] $end
$upscope $end
$upscope $end
$scope module testbench $end
$var wire 4 : c1 [3:0] $end
$var wire 4 ; c2 [3:0] $end
$var wire 16 < d1 [15:0] $end
$var wire 16 = d2 [15:0] $end
$var wire 1 % m_dump $end
$var wire 15 > a2 [14:0] $end
$var wire 15 ? a1 [14:0] $end
$var reg 1 @ c_dump $end
$var reg 1 & clk $end
$var reg 1 A reset $end
$upscope $end
$scope module testbench $end
$scope module mem $end
$var wire 15 B A2 [14:0] $end
$var wire 4 C C2 [3:0] $end
$var wire 16 D D2 [15:0] $end
$var wire 1 % M_DUMP $end
$var wire 1 A RESET $end
$var wire 1 & clk $end
$var parameter 32 E _SEED $end
$var reg 4 F c2out [3:0] $end
$var reg 16 G cache_line [15:0] $end
$var reg 16 H d2out [15:0] $end
$var reg 1 I write2 $end
$var integer 32 J SEED [31:0] $end
$var integer 32 K adr [31:0] $end
$var integer 32 L i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110111000011110110 E
$end
#0
$dumpvars
b0 L
b0 K
b110111000011110110 J
0I
bx H
b0 G
bx F
b0 D
bx C
bx B
0A
0@
bx ?
bx >
b0 =
bx <
bx ;
bx :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
1,
bx +
x*
bx )
bx (
bx '
0&
z%
x$
bx #
bx "
bx !
$end
#1
b1 "
b1 :
b1 (
b0 !
b0 ?
b0 '
b0 H
1&
#2
b0 F
0&
#3
1&
#4
0&
#5
b0 >
b0 B
b10 ;
b10 C
b0 "
b0 :
0,
1&
#6
0&
#7
b0 ;
b0 C
b0 =
b0 D
b1 L
1I
1&
#8
0&
#9
b10 L
1&
#10
0&
#11
b11 L
1&
#12
0&
#13
b100 L
1&
#14
0&
#15
b101 L
1&
#16
0&
#17
b110 L
1&
#18
0&
#19
b111 L
1&
#20
0&
#21
b1000 L
1&
#22
0&
#23
b1001 L
1&
#24
0&
#25
b0 L
1&
#26
0&
#27
b1 ;
b1 C
bx =
bx D
b1 L
b1 F
bx H
bx G
1&
#28
0&
#29
b10 L
1&
#30
0&
#31
b11 L
1&
#32
0&
#33
b100 L
1&
#34
0&
#35
b101 L
1&
#36
0&
#37
b110 L
1&
#38
0&
#39
b111 L
1&
#40
0&
#41
b1000 L
1&
#42
0&
#43
b1001 L
1&
#44
0&
#45
b1010 L
1&
#46
0&
#47
b1011 L
1&
#48
0&
#49
b1100 L
1&
#50
0&
#51
b1101 L
1&
#52
0&
#53
b1110 L
1&
#54
0&
#55
b1111 L
1&
#56
0&
#57
b10000 L
1&
#58
0&
#59
b111 "
b111 :
b0 ;
b0 C
b0xxxxxxxx #
b0xxxxxxxx <
b0 =
b0 D
b0 H
0I
1&
#60
1$
1*
b0 F
0&
#61
bz "
bz :
bz #
bz <
0$
0*
1&
#62
0&
#63
1&
#64
0&
#65
1&
#66
0&
#67
1&
#68
0&
#69
1&
#70
0&
#71
1&
#72
0&
#73
1&
#74
0&
#75
1&
#76
0&
#77
1&
#78
0&
#79
1&
#80
0&
#81
1&
